{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mahamedhassan/Dev-projects/ReactApp/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/mahamedhassan/Dev-projects/ReactApp/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/mahamedhassan/Dev-projects/ReactApp/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-template-curly-in-string */import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyARKOtLJswDuomnu0V4g6odZis7uHp2wVo\",authDomain:\"crown-db-c2ce3.firebaseapp.com\",databaseURL:\"https://crown-db-c2ce3.firebaseio.com\",projectId:\"crown-db-c2ce3\",storageBucket:\"crown-db-c2ce3.appspot.com\",messagingSenderId:\"129246985341\",appId:\"1:129246985341:web:665449295a166e11ba0514\"// measurementId: \"G-DMTN3MHB8B\"\n};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapshot,displayName,email,createAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc('users/${userAuth.uid}');_context.next=5;return userRef.get();case 5:snapshot=_context.sent;if(snapshot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createAt:createAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/mahamedhassan/Dev-projects/ReactApp/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","get","snapshot","exists","displayName","email","createAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"ygBAAA,gDAEA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,gCAFD,CAGXC,WAAW,CAAE,uCAHF,CAIXC,SAAS,CAAE,gBAJA,CAKXC,aAAa,CAAE,4BALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CACR;AARY,CAAf,CAYA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAMC,QAAN,CAAgBC,cAAhB,qKACjCD,QADiC,iEAG/BE,OAH+B,CAGrBC,SAAS,CAACC,GAAV,CAAc,uBAAd,CAHqB,uBAIdF,CAAAA,OAAO,CAACG,GAAR,EAJc,QAI/BC,QAJ+B,kBAKjCA,QAAQ,CAACC,MALwB,0BAM1BC,WAN0B,CAMHR,QANG,CAM1BQ,WAN0B,CAMbC,KANa,CAMHT,QANG,CAMbS,KANa,CAO3BC,QAP2B,CAOhB,GAAIC,CAAAA,IAAJ,EAPgB,wCAUvBT,CAAAA,OAAO,CAACU,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,QAAQ,CAARA,QAHE,EAICT,cAJD,EAVuB,0FAmB7BY,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAnB6B,wCAuB9Bb,OAvB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CA2BPT,QAAQ,CAAC0B,aAAT,CAAuBzB,MAAvB,EAEA,MAAO,IAAM0B,CAAAA,IAAI,CAAG3B,QAAQ,CAAC2B,IAAT,EAAb,CACP,MAAO,IAAMd,CAAAA,SAAS,CAAGb,QAAQ,CAACa,SAAT,EAAlB,CAEP,GAAMe,CAAAA,QAAQ,CAAG,GAAI5B,CAAAA,QAAQ,CAAC2B,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe5B,CAAAA,QAAf","sourcesContent":["/* eslint-disable no-template-curly-in-string */\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyARKOtLJswDuomnu0V4g6odZis7uHp2wVo\",\n    authDomain: \"crown-db-c2ce3.firebaseapp.com\",\n    databaseURL: \"https://crown-db-c2ce3.firebaseio.com\",\n    projectId: \"crown-db-c2ce3\",\n    storageBucket: \"crown-db-c2ce3.appspot.com\",\n    messagingSenderId: \"129246985341\",\n    appId: \"1:129246985341:web:665449295a166e11ba0514\",\n   // measurementId: \"G-DMTN3MHB8B\"\n      \n};\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n    if(!userAuth) return;\n    \n    const userRef = firestore.doc('users/${userAuth.uid}');\n    const snapshot = await userRef.get();\n    if(!snapshot.exists){\n        const {displayName, email } = userAuth;\n        const createAt = new Date();\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n\n            })\n\n        }catch(error){\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}