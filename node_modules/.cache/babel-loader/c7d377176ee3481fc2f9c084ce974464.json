{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyARKOtLJswDuomnu0V4g6odZis7uHp2wVo\",\n  authDomain: \"crown-db-c2ce3.firebaseapp.com\",\n  databaseURL: \"https://crown-db-c2ce3.firebaseio.com\",\n  projectId: \"crown-db-c2ce3\",\n  storageBucket: \"crown-db-c2ce3.appspot.com\",\n  messagingSenderId: \"129246985341\",\n  appId: \"1:129246985341:web:665449295a166e11ba0514\" // measurementId: \"G-DMTN3MHB8B\"\n\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc('users/${userAuth.uid}');\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/mahamedhassan/Dev-projects/ReactApp/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snapshot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI,CAQZ;;AARY,CAAf;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAGd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAc,uBAAd,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAwBT,QAA9B;AACA,UAAMU,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAG;AACC,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAQH,KATD,CASC,OAAMY,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOd,OAAP;AAEH,CA1BM;AA4BPZ,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyARKOtLJswDuomnu0V4g6odZis7uHp2wVo\",\n    authDomain: \"crown-db-c2ce3.firebaseapp.com\",\n    databaseURL: \"https://crown-db-c2ce3.firebaseio.com\",\n    projectId: \"crown-db-c2ce3\",\n    storageBucket: \"crown-db-c2ce3.appspot.com\",\n    messagingSenderId: \"129246985341\",\n    appId: \"1:129246985341:web:665449295a166e11ba0514\",\n   // measurementId: \"G-DMTN3MHB8B\"\n      \n};\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n    if(!userAuth) return;\n\n   \n    const userRef = firestore.doc('users/${userAuth.uid}');\n    const snapshot = await userRef.get();\n    if(!snapshot.exists){\n        const {displayName, email } = userAuth;\n        const createAt = new Date();\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n\n            })\n\n        }catch(error){\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}